import{_ as c,s as h,r as u,c as d,o as s,w as p,a as l,b as o,d as n,t as i}from"./index-NXnxvJjD.js";const f={name:"FreshRSS",mixins:[h],props:{item:Object},data:()=>({subscriptions:0,unread:0,serverError:!1}),created:function(){const e=parseInt(this.item.updateInterval,10)||0;e>0&&setInterval(()=>this.fetchConfig(),e),this.fetchConfig()},methods:{fetchConfig:async function(){if(!this.auth){const t=await this.fetch(`/api/greader.php/accounts/ClientLogin?Email=${this.item.username}&Passwd=${this.item.password}`,{method:"GET",cache:"no-cache"},!1).then(r=>r.match(/Auth=(([([a-z0-9]+)\/([([a-z0-9]+))/i));t!==null&&(this.auth=t[1])}const e={Authorization:`GoogleLogin auth=${this.auth}`};this.fetch("/api/greader.php/reader/api/0/subscription/list?output=json",{headers:e}).then(t=>{this.subscriptions=t.subscriptions.length}).catch(t=>{console.error(t),this.serverError=!0}),this.fetch("/api/greader.php/reader/api/0/unread-count?output=json",{headers:e}).then(t=>{this.unread=t.max}).catch(t=>{console.error(t),this.serverError=!0})}}},m={class:"notifs"},_={key:0,class:"notif subscriptions",title:"Subscriptions"},g={key:1,class:"notif unread",title:"Unread"},v={key:2,class:"notif errors",title:"Connection error to the FreshRSS API, check url username and password in config.yml"};function b(e,t,r,C,S,k){const a=u("Generic");return s(),d(a,{item:r.item},{indicator:p(()=>[l("div",m,[e.subscriptions>0?(s(),o("strong",_,i(e.subscriptions),1)):n("",!0),e.unread>0?(s(),o("strong",g,i(e.unread),1)):n("",!0),e.serverError?(s(),o("strong",v,"?")):n("",!0)])]),_:1},8,["item"])}const w=c(f,[["render",b],["__scopeId","data-v-50caa048"]]);export{w as default};
