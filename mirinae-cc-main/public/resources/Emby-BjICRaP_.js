import{_ as l,s as d,r as C,c as b,o as i,w as a,b as n,d as f,n as y,t as o,a as r,F as u,e as c}from"./index-NXnxvJjD.js";const p={name:"Emby",mixins:[d],props:{item:Object},data:()=>({status:"",albumCount:0,songCount:0,movieCount:0,seriesCount:0,episodeCount:0}),computed:{embyCount:function(){return this.item.libraryType==="music"?`${this.songCount} songs, ${this.albumCount} albums`:this.item.libraryType==="movies"?`${this.movieCount} movies`:this.item.libraryType==="series"?`${this.episodeCount} eps, ${this.seriesCount} series`:"wrong library type ğŸ’€"}},created(){this.fetchServerStatus(),!this.item.subtitle&&this.status!=="dead"&&this.fetchServerMediaStats()},methods:{fetchServerStatus:async function(){this.fetch("/System/info/public").then(t=>{if(t.Id)this.status="running";else throw new Error}).catch(t=>{console.log(t),this.status="dead"})},fetchServerMediaStats:async function(){const t={"X-Emby-Token":this.item.apikey};var e=await this.fetch("/items/counts",{headers:t}).catch(s=>{console.log(s)});this.albumCount=e.AlbumCount,this.songCount=e.SongCount,this.movieCount=e.MovieCount,this.seriesCount=e.SeriesCount,this.episodeCount=e.EpisodeCount}}},v={class:"title is-4"},_={class:"subtitle is-6"};function S(t,e,s,g,k,m){const h=C("Generic");return i(),b(h,{item:s.item},{content:a(()=>[r("p",v,o(s.item.name),1),r("p",_,[s.item.subtitle?(i(),n(u,{key:0},[c(o(s.item.subtitle),1)],64)):(i(),n(u,{key:1},[c(o(m.embyCount),1)],64))])]),indicator:a(()=>[t.status?(i(),n("div",{key:0,class:y(["status",t.status])},o(t.status),3)):f("",!0)]),_:1},8,["item"])}const E=l(p,[["render",S],["__scopeId","data-v-3f8bd0d2"]]);export{E as default};
